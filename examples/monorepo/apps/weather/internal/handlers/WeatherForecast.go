package handlers

// Path: WeatherForecast.go
//
// This file is generated by the create-go-app tool.
//
import (
	"{{.moduleName}}/apps/weather/internal/usecases"
	"{{.moduleName}}/services/factory"
	"{{.moduleName}}/transports/rest"

	"github.com/gin-gonic/gin"
)

type _WeatherForecast struct {
	usecase usecases.Forecast
}

func WeatherForecast(
	usecase usecases.Forecast,
) rest.RestHandler[gin.IRouter] {
	return &_WeatherForecast{
		usecase: usecase,
	}
}

// Handler -
func (c *_WeatherForecast) handler_1(ctx *gin.Context) {
	ftx := ctx.MustGet("ftx").(factory.Service)

	ftx.Logger().Info("WeatherForecast.handler_1")

	result, err := c.usecase.Get(ftx)
	if err != nil {
		rest.HandleError(ctx, err)
		return
	}

	ctx.JSON(200, result)
}

func (c *_WeatherForecast) SetupRoutes(rg gin.IRouter) {
	rg.GET("/WeatherForecast", c.handler_1)
}
